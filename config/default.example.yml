kurento:
  - ip: ""
    url: ws://127.0.0.1:8888/kurento
    # mediaType: (main|audio|content)
    ipClassMappings:
      local:
      private:
      public:
    options:
      failAfter: 5
      request_timeout: 30000
      response_timeout: 30000
# Number of attemps of connecting to the configured kurento instances the first
# time. Infinity means it tries forever until it's able to connect. Default is Infinity.
kurentoStartupRetries: Infinity
# Whether to allow Kurento to process mDNS ICE candidates
kurentoAllowMDNSCandidates: false
# Whether to track KMS's ICE state changes for every peer.
# Disabled by default for now until we trace the perf. impact of it
kurentoTrackIceStateChanges: false
# balancing-strategy: can be either ROUND_ROBIN or MEDIA_TYPE. The MEDIA_TYPE only
# works properly if you annotated the configured kurento instances in the
# 'kurento' config parameter with a mediaType field (main|audio|content) which
# will specify what will each server handle. Default is ROUND_ROBIN
balancing-strategy: ROUND_ROBIN
# Allow media offloading to Kurento instances with mismatched media types
kurentoAllowMediaTypeMix: false
video-transposing-ceiling: 50
audio-transposing-ceiling: 100
acceptSelfSignedCertificate: false
redisHost: 127.0.0.1
redisPort: "6379"
# Uncomment to set a password if Redis requires auth.
# redisPassword: foobared
clientPort: "3008"
clientHost: 127.0.0.1
mediaFlowTimeoutDuration: 30000
mediaStateTimeoutDuration: 30000
requestQueueTimeout: 30000
screenshareSubscriberSpecSlave: false
screensharePlayStartEnabled: true
screenshareServerSideAkkaBroadcast: true
screenshareIgnoreMediaThresholds: false
listenOnlyIgnoreMediaThresholds: true
videoIgnoreMediaThresholds: false
videoSubscriberSpecSlave: false

# Following three configurations: see media-server-adapters config
# to get a list of implemented adapters. The configuration values
# here are the adapter's name of choice
videoMediaServer: Kurento
screenshareMediaServer: Kurento
audioMediaServer: Kurento
# RTP|WebRTC. Dictates how the FS <-> [audioMediaServer] bridge is established:
# via plain RTP or via a WebRTC-backed RTP stream
# WebRTC should be used for environments where the bridge is between external
# servers AND when mediasoup is being used
listenOnlyGlobalAudioMode: 'RTP'

# Whether to record screen raw files
recordScreenSharing: true
# Whether to record camera raw files
recordWebcams: true
# Base path where recording raw files will be stored
recordingBasePath: /var/kurento
# The base recording profile for video and screen sharing
# WEBM_VIDEO_ONLY|WEBM_AUDIO_ONLY|WEBM_FULL
recordingMediaProfile: WEBM_VIDEO_ONLY
# The base recording container format.
# webm|mp4
recordingFormat: webm
# Recording event keys expiry time in Redis
# 14 days is the default
redisExpireTime: 1209600

# Time to wait before ejecting an user which has the autoLeave flag marked
# as true and has no more media sessions under its ownership
mcsUserEjectionTimer: 60000
# mcs-core entrypoint configured on nginx
mcs-path: /mcs
mcs-port: 3010
mcs-host: 127.0.0.1
mcs-address: localhost
mcs-ws-timeout: 30000
freeswitch:
  ip: 127.0.0.1
  sip_ip: 127.0.0.1
  port: 5066
  esl_ip: 127.0.0.1
  esl_port: 8021
  handleExternalConnections: false
  ipClassMappings:
    local:
    private:
    public:
log:
  filename: /var/log/bbb-webrtc-sfu/bbb-webrtc-sfu.log
  level: info
  stdout: true
modules:
- path: ./lib/mcs-core/process.js
  name: core
  dedicated: true
  # IPC can be either native|redis right now. Defaults to native
  ipc:
    mode: native
    options:
      # inboundChannel: to-mcs-core
      # outboundChannel: from-mcs-core
- path: ./lib/screenshare/ScreenshareProcess.js
  name: screenshare
  dedicated: true
  ipc:
    mode: native
    options:
      # inboundChannel: to-sfu-screenshare
      # outboundChannel: from-sfu-screenshare
- path: ./lib/video/VideoProcess.js
  name: video
  dedicated: true
  ipc:
    mode: native
    options:
      # inboundChannel: to-sfu-video
      # outboundChannel: from-sfu-video
- path: ./lib/audio/AudioProcess.js
  name: audio
  dedicated: true
  ipc:
    mode: native
    options:
      # inboundChannel: to-sfu-audio
      # outboundChannel: from-sfu-audio
# media-server-adapters: path could refer to a npm module
media-server-adapters:
- path: kurento/kurento.js
  name: Kurento
- path: freeswitch/freeswitch.js
  name: Freeswitch
- path: mediasoup/mediasoup-adapter.js
  name: mediasoup

# strategies: path could refer to a npm module
strategies:
  #- path: ./voice-switching-handler.js
  # name: VOICE_SWITCHING

# Codec values (codec_video_main, codec_video_content, codec_audio):
# it'll force the specified codec.
# Put the 'ANY' value to prevent forcing a specific codec without the _priority options.
# For the 'ANY' option, there's a trio of optional configuration where you are
# able to specify the priority codec to force in a lenient way (codec_*_priority).
# If codec_*_priority is undefined or not found in the media description,
# no specific codec will be forced (base ANY behaviour).
# If the priority codec is found in the media description, any codec
# that doesn't match it will be filtered out (ie it will act as if the priority
# codec was forced).
# If you wanna add other codecs (e.g.: VP9)
# add it to the list with its specifiers. If the codec isn't in the list,
# it'll default to the specifier values in codec_*_priority OR VP8,
# but still force the entered codec option.
# P.S.: _video_main refers to webcam/main video content, _video_content refers to
# screenshare/content:slides streams.
conference-media-specs:
  codec_video_main: VP8
  codec_video_main_priority: VP8
  codec_video_content: VP8
  codec_video_content_priority: VP8
  codec_audio: ANY
  codec_audio_priority: OPUS
  H264:
    profile_level_id: "42e01f"
    packetization_mode: "1"
    level_asymmetry_allowed: "1"
    tias_main: "300000"
    as_main: "300"
    tias_content: "1500000"
    as_content: "1500"
    max_mbps_main: "0"
    max_fs_main: "0"
    max_br_main: "0"
    max_mbps_content: "0"
    max_fs_content: "12288"
    max_br_content: "0"
  VP8:
    tias_main: "300000"
    as_main: "300"
    tias_content: "1500000"
    as_content: "1500"
  OPUS:
    useinbandfec: "1"
    maxaveragebitrate: "30000"
    maxplaybackrate: "48000"
    ptime: "20"
    minptime: "10"
    maxptime: "40"
kurentoRembParams:
  rembOnConnect: 300
  upLosses: 12
  decrementFactor: 0.5
  thresholdFactor: 0.8
# Munges/removes the SDP REMB rtcp-fb support attribute (ie tries to disable REMB)
kurentoRemoveRembRtcpFb: false
# kurentoAllowedCandidateIps: optional configuration. List of VALID IPs to be used
# to define valid outbound ICE candidates.
# This is a short-term optimization to reduce the number of candidates sent to
# the client by filtering out anything that isn't in this list
kurentoAllowedCandidateIps:
  #- <ipv4|ipv6>
# mediaThresholds: mandatory configuration. Establishes type-agnostic media thresholds
# that when hit will make the server refuse to negotiate new medias.
# Any attemps to inject medias past the thresholds will return an error with code
# 2002 and message MEDIA_SERVER_NO_RESOURCES.
# The threshold priority order is global -> perRoom -> perUser. Value 0 means unlimited
# (default). An optional API parameter may be sent on pub/sub calls (ignoreThresholds)
# to make the media ignore the configured thresholds. This is used here for recording
# and audio medias.
mediaThresholds:
  global: 0
  perRoom: 0
  perUser: 0
# Whether to allow duplicate externalUserId's on join. If allowed, join requests with
# a externalUserId specified in the optional parameters will associate the new connection
# with a pre-existing user (if it exists), or create a new one.
# This will create a new virtual link between the request
# and the pre-existing user with a unique internal user ID. The user will be
# cleared from the system when a leave call for it is sent OR it has the autoLeave
# optional parameter set to true and all of its medias were cleared
allowDuplicateExtUserId: true
ejectOnUserLeft: true
permissionProbes: true

# Direct Prometheus instrumentation. Currently operating only over mcs-core.
# EXPERIMENTAL, so disabled by default.
prometheus:
  enabled: false
  # Scrape route host
  host: localhost
  # Scrape route port
  port: 3014
  # Metrics endpoint path
  path: '/metrics'
  # Whether default metrics for Node.js processes should be exported
  collectDefaultMetrics: false

mediasoup:
  workers: "auto"
  worker:
    # "debug", "warn", "error", "none"
    logLevel: "debug"
    # + svc, simulcast, srtp, ...
    logTags:
      - "bwe"
      - "dtls"
      - "ice"
      - "info"
      - "rtcp"
      - "rtp"
      - "rtx"
      - "srtp"
    rtcMinPort: 24577
    rtcMaxPort: 32768
    #dtlsCertificateFile:
    #dtlsPrivateKeyFile:
  router:
    # TODO fetch from conference-media-specs
    mediaCodecs:
      - kind: "audio"
        mimeType: "audio/opus"
        preferredPayloadType: 111
        clockRate: 48000
        channels: 2
        parameters:
          minptime: 10
          useinbandfec: 1
        rtcpFeedback:
          - type: "transport-cc"
      - kind: "audio"
        mimeType: "audio/telephone-event"
        preferredPayloadType: 101
        clockRate: 8000
      - kind: "audio"
        mimeType: "audio/PCMU"
        preferredPayloadType: 0
        clockRate: 8000
        rtcpFeedback:
          - type: "transport-cc"
      - kind: 'audio'
        mimeType: 'audio/ISAC'
        clockRate: 32000
        preferredPayloadType: 103
        rtcpFeedback:
          - type: "transport-cc"
      - kind: "video"
        mimeType: "video/VP8"
        preferredPayloadType: 96
        clockRate: 90000
        rtcpFeedback:
          - type: "transport-cc"
          - type: "goog-remb"
          - type: "ccm"
            parameter: "fir"
          - type: "nack"
          - type: "nack"
            parameter: "pli"
  webrtc:
    # announcedIP => it's the host public IPv4 in case the machine is
    # behind a 1:1 NAT
    # ip => the address on which mediasoup will bind its RTC sockets
    listenIps:
      - ip: "0.0.0.0"
        announcedIp: "127.0.0.1"
      # - ip: <some-ipv6>
    # equivalent to Kurento's/libnice's ice-udp/niceAgentIceUdp
    enableUdp: true
    # equivalent to Kurento's/libnice's ice-tcp/niceAgentIceTcp
    enableTcp: false
    # candidate priority mangling; makes sense to keep this enabled
    # even more when ice-tcp is enabled as well
    preferUdp: true
    # TODO: fetch from conference-media-specs
    initialAvailableOutgoingBitrate: 100000
  plainRtp:
    # announcedIP => it's the host public IPv4 in case the machine is
    # behind a 1:1 NAT
    # ip => the address on which mediasoup will bind its plain RTP sockets
    # This is pretty similar in intent to webrtc.listenIps with two diffs:
    #   - only applies to plain transports (RTP)
    #   - it's not an array, so just one option
    listenIp:
      ip: "0.0.0.0"
      announcedIp: "127.0.0.1"
    # Whether RTCP should use RTPs transport.
    # False probably doesn't work yet in the adapter
    rtcpMux: true
    # Port inference through COMEDIA
    comedia: true
  webRtcHeaderExts:
    - uri: 'urn:ietf:params:rtp-hdrext:toffset'
      id: 1
    - uri: 'http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time'
      id: 2
    - uri: 'http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01'
      id: 4
    - uri: 'http://www.webrtc.org/experiments/rtp-hdrext/playout-delay'
      id: 5
    - uri: 'http://www.webrtc.org/experiments/rtp-hdrext/video-content-type'
      id: 6
    - uri: 'http://www.webrtc.org/experiments/rtp-hdrext/video-timing'
      id: 7
    - uri: 'http://www.webrtc.org/experiments/rtp-hdrext/color-space'
      id: 8
    - uri: 'urn:ietf:params:rtp-hdrext:sdes:mid'
      id: 9
    - uri: 'urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id'
      id: 10
    - uri: 'urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id'
      id: 11
  recorder:
    ffmpeg:
      # UDP, internal only. Doesn't need to be open in the firewall, but should
      # be a dedicated range.
      recMinPort: 50000
      recMaxPort: 51000
      inputOptions:
        - "-protocol_whitelist file,rtp,udp"
        - "-probesize 1000000"
        - "-analyzeduration 1000000"
      outputOptions:
        - '-f webm'
        - '-flags +global_header'
